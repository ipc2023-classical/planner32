# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: build

%files
    .

%post
    ## Install all dependencies.
    apt-get update
    apt-get -y install --no-install-recommends cmake make g++ pypy3 automake

    ## Clear build directory.
    rm -rf ./builds

    ## Build planner
    cd src
    ./build_all

    strip --strip-all src/search/downward

# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: run

%files from build
    fast-downward.py
    driver
    builds/release/bin/

%post
    apt-get update
    apt-get -y install --no-install-recommends pypy3
    apt-get clean
    rm -rf /var/lib/apt/lists/*

# The runscript is called whenever the container is used to solve an instance.
%runscript
    DOMAINFILE="$1"
    PROBLEMFILE="$2"
    PLANFILE="$3"

    ./plan --search', 'astar(lmcut(), prune=num_simulation(use_quantified_dominance=true, use_single_bdd=false, pruning_type=prune_successors=true, prune_dominated_by_parent=true, prune_dominated_by_closed=false, prune_dominated_by_open=true, min_desactivation_ratio=0, min_insertions=infinity, tau_labels_self_loops=false, tau_labels_recursive=false, tau_labels_noop=false, truncate_value=10, abs=builder_massim(compute_final_simulation=false, switch_off_label_dominance=infinity, merge_strategy=merge_dfp(), limit_transitions_merge=50000, limit_merge=infinity)))'])

    pypy3 /fast-downward.py \
        --plan-file "$PLANFILE" \
        --overall-time-limit 30m \
        "$DOMAINFILE" \
        "$PROBLEMFILE" \
	--search "sbd()"


# Define meta data
%labels
Name        SymBD
Description Symbolic Bidirectonal Blind Search
Authors       Alvaro Torralba <alto@cs.aau.dk>
License     GPL 3
Tracks      optimal
SupportsDerivedPredicates                       no
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    partially, only quantification over static predicates
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
